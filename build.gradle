plugins {
    id "dev.architectury.loom" version "1.3-SNAPSHOT"
    id 'io.github.juuxel.loom-vineflower' version "${vineflower_version}"
    id 'io.github.p03w.machete' version '2.0.1'
    id "maven-publish"
}

base {
    archivesName = project.archives_base_name
}

mod_version = project.mod_version
create_version = project.create_version
minecraft_version = project.minecraft_version
version = project.mod_version
group = project.maven_group
String buildNumber = System.getenv("GITHUB_RUN_NUMBER")

java {
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17
}

loom {
    silentMojangMappingsLicense()

    forge {
        //mixinConfigs = [
        //        "escalators.mixins.json"
        //]

        // missing access transformers?
        // don't worry, you can still use them!
        // note that your AT *MUST* be located at
        // src/main/resources/META-INF/accesstransformer.cfg
        // to work as there is currently no config option to change this.
        // also, any names used in your access transformer will need to be
        // in SRG mapped ("func_" / "field_" with MCP class names) to work!
        // (both of these things may be subject to change in the future)
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url 'https://maven.parchmentmc.org' }
    maven { url 'https://maven.quiltmc.org/repository/release' }
    maven { url 'https://maven.blamejared.com/' }
    maven { url 'https://maven.neoforged.net/releases/' }

    maven {
        url 'https://maven.tterrag.com/'
        content {
            includeGroup 'com.jozufozu.flywheel'
            includeGroup 'com.tterrag.registrate'
            includeGroup 'com.simibubi.create'
        }
    }
    maven {
        url 'https://api.modrinth.com/maven'
        content { includeGroup 'maven.modrinth' }
    }
    maven {
        url 'https://www.cursemaven.com'
        content { includeGroup 'curse.maven' }
    }
}
dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"

    mappings(loom.layered {
        it.mappings("org.quiltmc:quilt-mappings:${minecraft_version}+build.${quilt_mappings}:intermediary-v2")
        it.parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
        it.officialMojangMappings { nameSyntheticMembers = false }
    })

    forge "net.minecraftforge:forge:${project.forge_version}"

    // Create and Co.
    modImplementation "com.tterrag.registrate:Registrate:${registrate_version}"
    modImplementation("com.simibubi.create:create-${minecraft_version}:${create_version}:slim") { transitive = false }
    modImplementation "com.jozufozu.flywheel:flywheel-forge-${minecraft_version}:${flywheel_version}"

    // JEI
    modCompileOnly "mezz.jei:jei-${minecraft_version}-common-api:${jei_version}"
    modCompileOnly "mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}"
    modLocalRuntime("mezz.jei:jei-${minecraft_version}-forge:${jei_version}") { transitive = false }

    // Dev QOL
    modLocalRuntime 'curse.maven:better-mods-button-541584:4665757'
    modLocalRuntime 'curse.maven:ferritecore-429235:4574361'
    modLocalRuntime "curse.maven:catalogue-459701:4766090"
}

processResources {
    // define properties that can be used during resource processing
    inputs.property "version", project.version
    inputs.property "create_version", project.create_version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "mod_version", project.mod_version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
        expand "create_version": project.create_version
        expand "minecraft_version": project.minecraft_version
        expand "mod_version": project.mod_version
    }
}
machete { enabled = buildNumber != null }

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = 'UTF-8'
    it.options.release.set 17
}

java {
    // withSourcesJar()
}

jar {
    // add some additional metadata to the jar manifest
    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_author,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : project.mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
